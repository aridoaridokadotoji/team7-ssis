@model team7_ssis.ViewModels.RetrievalDetailsViewModel
@{
    ViewBag.Title = "RetrievalDetails";
}

<h2>Retrieval Form #@Request.QueryString["retId"]</h2>

<div class="row mb-3">
    <div class="col-md-3">
        <div>Product ID</div>
        @Model.ProductID
    </div>
    <div class="col-md-6">
        <div>Name</div>
        @Model.Name
    </div>
    <div class="col-md-3">
        <div>Bin</div>
        @Model.Bin
    </div>
</div>

<h3>Breakdown by Department</h3>
<p class="mb-3">Changing the Actual quantity collected will modify the affected Disbursement List.</p>

<table id="myTable" class="table table-striped table-bordered" style="width: 100%">
    <thead>
        <tr>
            <th>Dept ID</th>
            <th>Department Name</th>
            <th>Needed</th>
            <th>Actual</th>
        </tr>
    </thead>

</table>

<div class="row mt-3">
    <div class="col-md-12">
        <button onclick="history.go(-1);" class="btn btn-default">Back</button>
        <button class="btn btn-primary"><i class="fa fa-floppy-o" aria-hidden="true"></i> Save</button>
    </div>
</div>

<script>
    var table;

    $(document).ready(function () {
        table = $('#myTable').DataTable({
            ajax: {
                url: "/api/retrievaldetails",
                method: "POST",
                data: {
                    retId: "@Request.QueryString["retId"]",
                    itemId: "@Request.QueryString["itemId"]"
                },
                dataSrc: ""
            },
            columns: [
                { "data": "DeptId", "autoWidth": true },
                { "data": "DeptName", "autoWidth": true },
                { "data": "Needed", "autoWidth": true },
                {
                    "data": "Actual",
                    "autoWidth": true,
                    "render": function (data, type, row, meta) {
                        var html = '<input class="actual" type="number" id="height" name="actual"' +
                            'value="' + data + '" min="0"/>';
                        return html;
                    }
                },
            ],
            select: "api"
        });
    });

    // change the value of the cell in the datatable with an input field
    $(document).on("blur", ".actual", function () {
        // grab the cell that the td refers to, which is the parent of the <input> element
        var cell = table.cell(this.parentElement);
        // assign the cell with the value from the <input> element
        cell.data($(this).val()).draw();
    });

</script>
@model team7_ssis.ViewModels.StockAdjustmentViewModel

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" type="text/css" href="Editor-1.7.4/css/editor.dataTables.css">
</head>
<body>
    <div class="row mb-3">
        <div class="col-md-8">
            <h2>Make Stock Adjustment</h2>
        </div>
        <div class="col-md-4">
            <button id="saveAsBtn" class="btn btn-default pull-right"><i class="fa fa-floppy-o" aria-hidden="true"></i> Save as Draft</button>
        </div>
    </div>
    <button id="addItemBtn" class="btn btn-default mb-3"><i class="fa fa-plus" aria-hidden="true"></i> Add Item</button>


    <table id="myTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Item Code</th>
                <th>Description</th>
                <th>Unit Price</th>
                <th>Reason</th>
                <th>Adjustment</th>
                <th>Delete</th>
            </tr>
        </thead>

    </table>


    @*<table class="table table-striped table-bordered">
            <tr>
                <td width="400" class="col-md-2"> Authorising Supervisor</td>
                <td width="400" class="col-md-2"> Authorising Manager</td>
            </tr>

            <tr>
                <td class="col-md-2">
                    @Html.DropDownList("FirstName", ViewBag.select1 as SelectList, "pls select supervicor")
                </td>

                <td class="col-md-2">

                    @Html.DropDownList("FirstName", ViewBag.select2 as SelectList, "pls select managers")
                </td>

            </tr>
        </table>*@

    <div class="row mt-3">
        <div class="col-md-12">
            <h3>Authorising Supervisor</h3>
            <form id="form1" name="form1">
                <select id="ChosenSupervisor" name="ChosenSupervisor" class="custom-select" onChange="chose1()">
                    @foreach (var supervisor in Model.supervisors)
                    {
                        <option value="@supervisor.UserName">@supervisor.FirstName @supervisor.LastName</option>
                    }
                </select>

                <h3>Authorising Manager</h3>
                <select id="ChosenManager" name="ChosenManager" class="custom-select" onChange="chose2()">
                    @foreach (var manager in Model.managers)
                    {
                        <option value="@manager.UserName">@manager.FirstName @manager.LastName</option>
                    }
                </select>
            </form>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-md-12">
            <button class="btn btn-default" id="cancelBtn">Cancel</button>
            <button class="btn btn-primary" id="confirmBtn">Confirm</button>
        </div>
    </div>


    <div class="modal" id="myModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Item</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row">
                            <table id="addItemTable" class="table table.sm table-striped table-bordered" style="width: 100%">
                                <thead>
                                    <tr>
                                        <th>Thumbnail</th>
                                        <th>Item Code</th>
                                        <th>Category</th>
                                        <th>Description</th>
                                        <th>In Stock</th>
                                        <th>Unit of Measure</th>
                                        <th>UnitPrice</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>

                    </div>
                </div>

                <div class="row">
                    <div class="col-md-2">
                        <div id="addItemImage"><img class="img-thumbnail img-responsive" id="imageAddItem" /></div>
                    </div>
                    <div class="col-md-3">
                        <div class="label">Item Number</div>
                        <div id="itemnumber"></div>
                        <br />
                        <div class="label">In Stock</div>
                        <div id="instock"></div>
                    </div>
                    <div class="col-md-3">
                        <div class="label">Description</div>
                        <div id="description"></div>
                        <br />
                        <div class="label">Reorder Level</div>
                        <div id="reorderlevel"></div>
                    </div>
                    <div class="col-md-2">
                        <div class="label">Reorder Quantity</div>
                        <div id="reorderquantity"></div>
                        <div class="label">Unit of Measure</div>
                        <div id="uom"></div>
                    </div>
                    <div class="col-md-2">
                        <div class="label">Category</div>
                        <div id="category"></div>
                    </div>



                </div>
           
       
                <div class="modal-footer">
                    <div id="modalMsg"></div>
                    <label>Adjustment</label>
                    <input id="AdjustmentInput" type="number" min="1" style="width:100px"/>
                    <label>Reason</label>
                    <input id="ReasonInput" type="text" />
                    <button id="addToReq" type="button" class="btn btn-primary">Add to StockAdjustment</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
    </div>
 </div>
</div>



    <script>

        //function chose1() {
        //    var myselect1 = document.getElementById("ChosenSupervisor");
        //    var index1 = myselect1.selectedIndex;
        //    var supervisor = myselect1.options[index1].value;
        //    alert(supervisor);

        //}
        //function chose2() {
        //    var myselect2 = document.getElementById("ChosenManager");
        //    var index2 = myselect2.selectedIndex;
        //    var manager = myselect2.options[index2].value;
        //    alert(manager);
        //}

        $(document).ready(function () {
            var myTable = $('#myTable').DataTable({
                "stateSave": true,
                "bDeferRender": true,
                columns: [
                    { title: "ItemCode" },
                    { title: "Description" },
                    { title: "UnitPrice" },
                    {
                        title: "Reason",
                        render: function (data, type, row, meta) {
                            var html = '<input class="edit1" type="textbox" ' +
                                'value="' + data + '"/>';
                            return html;
                        }
                    },
                    {
                        title: "Adjustment",
                        render: function (data, type, row, meta) {
                            var html = '<input class="edit2" type="number" ' +
                                'value="' + data + '"/>';
                            return html;
                        }
                    },
                    {
                        defaultContent: '<i class="fa fa-times pointer" aria-hidden="true"></i>'
                    }
                ],

            });

            var addItemTable = $('#addItemTable').DataTable({
                ajax: {
                    url: "/api/manage/items",
                    dataSrc: ""
                },
                pageLength: 3,
                columns: [
                    {
                        data: "ImagePath",
                        render: function (data, type, row, meta) {
                            var html = '<img class="img-thumbnail img-responsive myImage" alt="Cinque Terre"" src="/Images/' + data + '.jpg" />';
                            return html;
                        }
                    },
                    { "data": "ItemCode", "autoWidth": true },
                    { "data": "ItemCategoryName", "autoWidth": true },
                    { "data": "Description", "autoWidth": true },
                    { "data": "Quantity", "autoWidth": true },
                    { "data": "Uom", "autoWidth": true },
                    { "data": "UnitPrice", "autoWidth": true }
                ],

                select: "single"
            });

            $('#addItemBtn').click(function () {
                $('#myModal').modal({
                    backdrop: 'static',
                });
            });


            $('#saveAsBtn').click(function () {

                var myselect1 = document.getElementById("ChosenSupervisor");
                var index1 = myselect1.selectedIndex;
                var supervisor = myselect1.options[index1].value;
                // alert(supervisor);

                var myselect2 = document.getElementById("ChosenManager");
                var index2 = myselect2.selectedIndex;
                var manager = myselect2.options[index2].value;
                // alert(manager);

                var data = $('#myTable').dataTable().fnGetData();
                if (data.length == 0) { alert("Please Add Items before Save"); }
                else if (data.length > 0) {

                    var reqIdArray = [];
                    for (i = 0; i < data.length; i++) {
                        var obj = {
                            Itemcode: data[i][0],
                            Unitprice: data[i][2],
                            Reason: data[i][3],
                            Adjustment: data[i][4],
                            Supervisor: supervisor,
                            Manager: manager
                        };
                        reqIdArray[i] = obj;
                    }

                    $.ajax({
                        url: '/api/stockadjustment/save',
                        contentType: 'application/json',
                        data: JSON.stringify(reqIdArray),
                        dataType: "json",
                        type: "POST",
                        traditional: true,
                        success: function (responseJSON) {

                            window.location.replace("/StockAdjustment");
                        }
                    });
                }


            });

            $('#cancelBtn').click(function () {
                //direct to home page
                window.location.href = "/StockAdjustment";
            });

            $('#confirmBtn').click(function () {

                var myselect1 = document.getElementById("ChosenSupervisor");
                var index1 = myselect1.selectedIndex;
                var supervisor = myselect1.options[index1].value;
                // alert(supervisor);

                var myselect2 = document.getElementById("ChosenManager");
                var index2 = myselect2.selectedIndex;
                var manager = myselect2.options[index2].value;
                // alert(manager);


                //save as pending and go to home page with message shows
                var data = $('#myTable').dataTable().fnGetData();
                var flag = 1;
                if (data.length == 0) {
                    alert("Please Add Items before Submit");
                }
                else {

                    // alert(data[0][4]);
                    for (i = 0; i < data.length; i++) {
                        if (isNaN(data[i][4]) || (data[i][4] == null) || (data[i][4] == 0)) {
                            flag = 0;
                            alert("Please input Adjustment(can't be 0)");
                            break;
                        }
                    }

                    var ItemsArray = [];
                    for (i = 0; i < data.length; i++) {
                        ItemsArray[i] = data[i][0];

                    }
                    ItemsArray.sort();
                    for (i = 0; i < data.length - 1; i++) {
                        if (ItemsArray[i]== ItemsArray[i + 1]) {
                            alert("Item " + ItemsArray[i] + " is repeated.Please check.");
                            flag = 0;
                            break;
                        }
                    }

                    if (flag == 1) {
                        var reqIdArray = [];
                        for (i = 0; i < data.length; i++) {
                            var obj = {
                                Itemcode: data[i][0],
                                Unitprice: data[i][2],
                                Reason: data[i][3],
                                Adjustment: data[i][4],
                                Supervisor: supervisor,
                                Manager: manager
                            };
                            reqIdArray[i] = obj;
                        }

                        $.ajax({
                            url: '/api/stockadjustment/confirm',
                            contentType: 'application/json',
                            data: JSON.stringify(reqIdArray),
                            dataType: "json",
                            type: "POST",
                            traditional: true,
                            success: function (rid) {

                                window.location.replace("/StockAdjustment?create=" + encodeURIComponent(rid));
                            }
                        });
                    }
                }

            });


            //show item details on click of each row in add items popup page
            $('#addItemTable tbody').on('click', 'tr', function () {


                // document.getElementById("imageAddItem").src = $($("#generateAddItem").DataTable().row(this)).find("img").attr('src');
                document.getElementById("imageAddItem").src = $(this).find("img").attr("src");

               // var unitPrice = addItemTable.row(this).data().UnitPrice;

                var data = addItemTable.row(this).data();

                //document.getElementById("generateUnitPrice").value = unitPrice;
                //document.getElementById("generateQty").value = 0;
                //document.getElementById("generateAmount").value = 0;

                document.getElementById("itemnumber").innerHTML = data.ItemCode;
                document.getElementById("instock").innerHTML = data.Quantity;
                document.getElementById("description").innerHTML = data.Description;
                document.getElementById("reorderlevel").innerHTML = data.ReorderLevel;
                document.getElementById("reorderquantity").innerHTML = data.ReorderQuantity;
                document.getElementById("category").innerHTML = data.ItemCategoryName;
                document.getElementById("uom").innerHTML = data.Uom;

            });

            $('#addToReq').click(function () {
                var data = $('#addItemTable').DataTable().rows({ selected: true }).data().toArray();
                //var Reason = "";
                //var Adjustment=0;
                var Adjustment = parseInt($('#AdjustmentInput').val());
                var Reason = $('#ReasonInput').val();
                myTable.row.add([data[0].ItemCode, data[0].Description, data[0].UnitPrice, Reason, Adjustment]).draw();
                $('#myModal').modal('hide');
            });

            $('#myTable tbody').on('click', 'i.fa.fa-times', function () {
                myTable
                    .row($(this).parents('tr'))
                    .remove()
                    .draw();
            });


            $(document).on("change", ".edit1", function () {

                var cell = myTable.cell(this.parentElement);
                // assign the cell with the value from the <input> element
                cell.data($(this).val()).draw();
            });


            $(document).on("change", ".edit2", function () {

                var cell = myTable.cell(this.parentElement);
                // assign the cell with the value from the <input> element
                cell.data($(this).val()).draw();
            });
        })


    </script>
</body>
</html>



















